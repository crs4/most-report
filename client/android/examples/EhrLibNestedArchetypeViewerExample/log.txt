07-09 11:21:49.668: I/LatinIME:LogUtils(868): Dictionary info: dictionary = contacts.it_IT.dict ; version = ? ; date = ?
07-09 11:21:49.668: D/audio_hw_primary(189): select_devices: out_snd_device(2: speaker) in_snd_device(0: )
07-09 11:21:49.668: D/ACDB-LOADER(189): ACDB -> send_afe_cal
07-09 11:21:51.851: D/dalvikvm(868): GC_FOR_ALLOC freed 4629K, 31% free 10996K/15852K, paused 36ms, total 36ms
07-09 11:21:51.861: I/dalvikvm-heap(868): Grow heap (frag case) to 14.224MB for 3624016-byte allocation
07-09 11:21:51.881: D/dalvikvm(868): GC_FOR_ALLOC freed 7K, 26% free 14528K/19392K, paused 22ms, total 22ms
07-09 11:21:51.911: D/dalvikvm(868): GC_CONCURRENT freed 103K, 26% free 14425K/19392K, paused 3ms+3ms, total 32ms
07-09 11:21:52.902: D/audio_hw_primary(189): select_devices: out_snd_device(2: speaker) in_snd_device(0: )
07-09 11:21:52.902: D/ACDB-LOADER(189): ACDB -> send_afe_cal
07-09 11:21:58.077: D/audio_hw_primary(189): select_devices: out_snd_device(2: speaker) in_snd_device(0: )
07-09 11:21:58.077: D/ACDB-LOADER(189): ACDB -> send_afe_cal
07-09 11:22:01.490: D/dalvikvm(868): GC_FOR_ALLOC freed 4244K, 32% free 10923K/15852K, paused 30ms, total 30ms
07-09 11:22:01.500: I/dalvikvm-heap(868): Grow heap (frag case) to 14.152MB for 3624016-byte allocation
07-09 11:22:01.530: D/dalvikvm(868): GC_FOR_ALLOC freed <1K, 26% free 14461K/19392K, paused 31ms, total 31ms
07-09 11:22:01.560: D/dalvikvm(868): GC_CONCURRENT freed 28K, 26% free 14433K/19392K, paused 4ms+3ms, total 29ms
07-09 11:22:01.890: D/dalvikvm(635): GC_EXPLICIT freed 5153K, 26% free 41483K/55544K, paused 3ms+15ms, total 152ms
07-09 11:22:01.910: D/audio_hw_primary(189): select_devices: out_snd_device(2: speaker) in_snd_device(0: )
07-09 11:22:01.910: D/ACDB-LOADER(189): ACDB -> send_afe_cal
07-09 11:22:01.970: I/LatinIME:LogUtils(868): Dictionary info: dictionary = main:it ; version = 43 ; date = 1389654090
07-09 11:22:01.980: I/LatinIME:LogUtils(868): Dictionary info: dictionary = userunigram.it.dict ; version = ? ; date = ?
07-09 11:22:06.675: D/audio_hw_primary(189): select_devices: out_snd_device(2: speaker) in_snd_device(0: )
07-09 11:22:06.675: D/ACDB-LOADER(189): ACDB -> send_afe_cal
07-09 11:22:10.689: D/dalvikvm(868): GC_FOR_ALLOC freed 4426K, 31% free 11004K/15852K, paused 32ms, total 32ms
07-09 11:22:10.699: I/dalvikvm-heap(868): Grow heap (frag case) to 14.232MB for 3624016-byte allocation
07-09 11:22:10.729: D/dalvikvm(868): GC_FOR_ALLOC freed 10K, 26% free 14533K/19392K, paused 28ms, total 28ms
07-09 11:22:10.759: D/dalvikvm(868): GC_CONCURRENT freed 48K, 26% free 14484K/19392K, paused 3ms+3ms, total 29ms
07-09 11:22:10.929: D/audio_hw_primary(189): select_devices: out_snd_device(2: speaker) in_snd_device(0: )
07-09 11:22:10.929: D/ACDB-LOADER(189): ACDB -> send_afe_cal
07-09 11:22:16.364: D/dalvikvm(868): GC_FOR_ALLOC freed 3881K, 31% free 10948K/15852K, paused 27ms, total 28ms
07-09 11:22:16.374: I/dalvikvm-heap(868): Grow heap (frag case) to 14.177MB for 3624016-byte allocation
07-09 11:22:16.404: D/dalvikvm(868): GC_FOR_ALLOC freed <1K, 26% free 14486K/19392K, paused 28ms, total 28ms
07-09 11:22:16.434: D/dalvikvm(868): GC_CONCURRENT freed 1K, 26% free 14485K/19392K, paused 2ms+2ms, total 30ms
07-09 11:22:18.757: D/FormContainer(24118): Saving widget for path:data[at0001]/events[at0002]/data[at0003]/items[at0004]
07-09 11:22:18.757: D/DvClusterWidget(24118): Widgets for dv cluster to be updated:2
07-09 11:22:18.757: D/DvText(24118): Notifying datatype changes to the DvTextWidget with current value:Phjdykdhmdhmdhmdhm
07-09 11:22:18.757: D/DvTextWidget(24118): CALLED updateWidgetContents with DV TEXT VALUE: Phjdykdhmdhmdhmdhm
07-09 11:22:18.757: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41ed2718 Called  setValue for DV_BOOLEAN: true
07-09 11:22:18.757: D/DvBoolean(24118): Notifying datatype changes to the DvBooleanWidget with current value:true
07-09 11:22:18.757: D/DvTextWidget(24118): CALLED updateWidgetContents with DV BOOLEAN VALUE: true
07-09 11:22:18.757: D/FormContainer(24118): Saving widget for path:data[at0001]/events[at0002]/data[at0003]/items[at0007]
07-09 11:22:18.757: D/DvClusterWidget(24118): Widgets for dv cluster to be updated:2
07-09 11:22:18.757: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41f53088 Called  setValue for DV_BOOLEAN: true
07-09 11:22:18.757: D/DvBoolean(24118): Notifying datatype changes to the DvBooleanWidget with current value:true
07-09 11:22:18.757: D/DvTextWidget(24118): CALLED updateWidgetContents with DV BOOLEAN VALUE: true
07-09 11:22:18.757: D/DvText(24118): Notifying datatype changes to the DvTextWidget with current value:Fu!DH!DH!
07-09 11:22:18.757: D/DvTextWidget(24118): CALLED updateWidgetContents with DV TEXT VALUE: Fu!DH!DH!
07-09 11:22:18.767: D/FormContainer(24118): Saving widget for path:data[at0001]/events[at0002]/data[at0003]/items[at0006]
07-09 11:22:18.767: D/DvClusterWidget(24118): Widgets for dv cluster to be updated:2
07-09 11:22:18.767: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41fbb3e0 Called  setValue for DV_BOOLEAN: true
07-09 11:22:18.767: D/DvBoolean(24118): Notifying datatype changes to the DvBooleanWidget with current value:true
07-09 11:22:18.767: D/DvTextWidget(24118): CALLED updateWidgetContents with DV BOOLEAN VALUE: true
07-09 11:22:18.767: D/DvText(24118): Notifying datatype changes to the DvTextWidget with current value:Wsgmsgmsg
07-09 11:22:18.767: D/DvTextWidget(24118): CALLED updateWidgetContents with DV TEXT VALUE: Wsgmsgmsg
07-09 11:22:18.767: D/FormContainer(24118): Saving widget for path:data[at0001]/events[at0002]/data[at0003]/items[at0005]
07-09 11:22:18.767: D/DvClusterWidget(24118): Widgets for dv cluster to be updated:2
07-09 11:22:18.777: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41fcf080 Called  setValue for DV_BOOLEAN: false
07-09 11:22:18.777: D/DvBoolean(24118): Notifying datatype changes to the DvBooleanWidget with current value:false
07-09 11:22:18.777: D/DvTextWidget(24118): CALLED updateWidgetContents with DV BOOLEAN VALUE: false
07-09 11:22:18.777: D/DvText(24118): Notifying datatype changes to the DvTextWidget with current value:Fu!fu!FH!fu!fu!
07-09 11:22:18.777: D/DvTextWidget(24118): CALLED updateWidgetContents with DV TEXT VALUE: Fu!fu!FH!fu!fu!
07-09 11:22:18.807: I/LatinIME:LogUtils(868): Dictionary info: dictionary = main:it ; version = 43 ; date = 1389654090
07-09 11:22:18.807: D/dalvikvm(24118): GC_FOR_ALLOC freed 361K, 4% free 10037K/10428K, paused 19ms, total 25ms
07-09 11:22:18.807: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0006]/items[at0014]
07-09 11:22:18.807: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41fe4070 Called toJson  for DV_BOOLEAN:false
07-09 11:22:18.807: D/DvBoolean(24118): To be converted in JSON:{"value": { "selected" : false}}
07-09 11:22:18.817: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":"DATA_NODE::DV_TEXT","at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":"DATA_NODE::DV_BOOLEAN","at0011":"DATA_NODE::DV_TEXT"}},"at0006":{"items":{"at0014":"DATA_NODE::DV_BOOLEAN","at0010":"DATA_NODE::DV_TEXT"}},"at0005":{"items":{"at0013":"DATA_NODE::DV_BOOLEAN","at0009":"DATA_NODE::DV_TEXT"}}}}]}}}}]}}
07-09 11:22:18.817: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0014": "DATA_NODE::DV_BOOLEAN",
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0010": "DATA_NODE::DV_TEXT"
07-09 11:22:18.817: D/TestAdlParser(24118): }
07-09 11:22:18.817: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0014": {
07-09 11:22:18.817: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.817: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.817: D/TestAdlParser(24118):     }
07-09 11:22:18.817: D/TestAdlParser(24118):   },
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0010": "DATA_NODE::DV_TEXT"
07-09 11:22:18.817: D/TestAdlParser(24118): }
07-09 11:22:18.817: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0006]/items[at0010]
07-09 11:22:18.817: D/DvText(24118): To be converted in JSON:{"value": { "text" : ""}}
07-09 11:22:18.817: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":"DATA_NODE::DV_TEXT","at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":"DATA_NODE::DV_BOOLEAN","at0011":"DATA_NODE::DV_TEXT"}},"at0006":{"items":{"at0014":{"value":{"selected":false}},"at0010":"DATA_NODE::DV_TEXT"}},"at0005":{"items":{"at0013":"DATA_NODE::DV_BOOLEAN","at0009":"DATA_NODE::DV_TEXT"}}}}]}}}}]}}
07-09 11:22:18.817: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0014": {
07-09 11:22:18.817: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.817: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.817: D/TestAdlParser(24118):     }
07-09 11:22:18.817: D/TestAdlParser(24118):   },
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0010": "DATA_NODE::DV_TEXT"
07-09 11:22:18.817: D/TestAdlParser(24118): }
07-09 11:22:18.817: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0014": {
07-09 11:22:18.817: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.817: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.817: D/TestAdlParser(24118):     }
07-09 11:22:18.817: D/TestAdlParser(24118):   },
07-09 11:22:18.817: D/TestAdlParser(24118):   "at0010": {
07-09 11:22:18.817: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.817: D/TestAdlParser(24118):       "text": ""
07-09 11:22:18.817: D/TestAdlParser(24118):     }
07-09 11:22:18.817: D/TestAdlParser(24118):   }
07-09 11:22:18.817: D/TestAdlParser(24118): }
07-09 11:22:18.817: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0005]/items[at0013]
07-09 11:22:18.817: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41fed118 Called toJson  for DV_BOOLEAN:false
07-09 11:22:18.817: D/DvBoolean(24118): To be converted in JSON:{"value": { "selected" : false}}
07-09 11:22:18.827: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":"DATA_NODE::DV_TEXT","at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":"DATA_NODE::DV_BOOLEAN","at0011":"DATA_NODE::DV_TEXT"}},"at0006":{"items":{"at0014":{"value":{"selected":false}},"at0010":{"value":{"text":""}}}},"at0005":{"items":{"at0013":"DATA_NODE::DV_BOOLEAN","at0009":"DATA_NODE::DV_TEXT"}}}}]}}}}]}}
07-09 11:22:18.827: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0013": "DATA_NODE::DV_BOOLEAN",
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0009": "DATA_NODE::DV_TEXT"
07-09 11:22:18.827: D/TestAdlParser(24118): }
07-09 11:22:18.827: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0013": {
07-09 11:22:18.827: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.827: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.827: D/TestAdlParser(24118):     }
07-09 11:22:18.827: D/TestAdlParser(24118):   },
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0009": "DATA_NODE::DV_TEXT"
07-09 11:22:18.827: D/TestAdlParser(24118): }
07-09 11:22:18.827: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0005]/items[at0009]
07-09 11:22:18.827: D/DvText(24118): To be converted in JSON:{"value": { "text" : ""}}
07-09 11:22:18.827: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":"DATA_NODE::DV_TEXT","at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":"DATA_NODE::DV_BOOLEAN","at0011":"DATA_NODE::DV_TEXT"}},"at0006":{"items":{"at0014":{"value":{"selected":false}},"at0010":{"value":{"text":""}}}},"at0005":{"items":{"at0013":{"value":{"selected":false}},"at0009":"DATA_NODE::DV_TEXT"}}}}]}}}}]}}
07-09 11:22:18.827: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0013": {
07-09 11:22:18.827: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.827: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.827: D/TestAdlParser(24118):     }
07-09 11:22:18.827: D/TestAdlParser(24118):   },
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0009": "DATA_NODE::DV_TEXT"
07-09 11:22:18.827: D/TestAdlParser(24118): }
07-09 11:22:18.827: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0013": {
07-09 11:22:18.827: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.827: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.827: D/TestAdlParser(24118):     }
07-09 11:22:18.827: D/TestAdlParser(24118):   },
07-09 11:22:18.827: D/TestAdlParser(24118):   "at0009": {
07-09 11:22:18.827: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.827: D/TestAdlParser(24118):       "text": ""
07-09 11:22:18.827: D/TestAdlParser(24118):     }
07-09 11:22:18.827: D/TestAdlParser(24118):   }
07-09 11:22:18.827: D/TestAdlParser(24118): }
07-09 11:22:18.827: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0007]/items[at0015]
07-09 11:22:18.827: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41fca438 Called toJson  for DV_BOOLEAN:false
07-09 11:22:18.827: D/DvBoolean(24118): To be converted in JSON:{"value": { "selected" : false}}
07-09 11:22:18.837: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":"DATA_NODE::DV_TEXT","at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":"DATA_NODE::DV_BOOLEAN","at0011":"DATA_NODE::DV_TEXT"}},"at0006":{"items":{"at0014":{"value":{"selected":false}},"at0010":{"value":{"text":""}}}},"at0005":{"items":{"at0013":{"value":{"selected":false}},"at0009":{"value":{"text":""}}}}}}]}}}}]}}
07-09 11:22:18.837: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0015": "DATA_NODE::DV_BOOLEAN",
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0011": "DATA_NODE::DV_TEXT"
07-09 11:22:18.837: D/TestAdlParser(24118): }
07-09 11:22:18.837: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0015": {
07-09 11:22:18.837: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.837: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.837: D/TestAdlParser(24118):     }
07-09 11:22:18.837: D/TestAdlParser(24118):   },
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0011": "DATA_NODE::DV_TEXT"
07-09 11:22:18.837: D/TestAdlParser(24118): }
07-09 11:22:18.837: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0007]/items[at0011]
07-09 11:22:18.837: D/DvText(24118): To be converted in JSON:{"value": { "text" : ""}}
07-09 11:22:18.837: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":"DATA_NODE::DV_TEXT","at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":{"value":{"selected":false}},"at0011":"DATA_NODE::DV_TEXT"}},"at0006":{"items":{"at0014":{"value":{"selected":false}},"at0010":{"value":{"text":""}}}},"at0005":{"items":{"at0013":{"value":{"selected":false}},"at0009":{"value":{"text":""}}}}}}]}}}}]}}
07-09 11:22:18.837: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0015": {
07-09 11:22:18.837: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.837: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.837: D/TestAdlParser(24118):     }
07-09 11:22:18.837: D/TestAdlParser(24118):   },
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0011": "DATA_NODE::DV_TEXT"
07-09 11:22:18.837: D/TestAdlParser(24118): }
07-09 11:22:18.837: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0015": {
07-09 11:22:18.837: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.837: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.837: D/TestAdlParser(24118):     }
07-09 11:22:18.837: D/TestAdlParser(24118):   },
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0011": {
07-09 11:22:18.837: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.837: D/TestAdlParser(24118):       "text": ""
07-09 11:22:18.837: D/TestAdlParser(24118):     }
07-09 11:22:18.837: D/TestAdlParser(24118):   }
07-09 11:22:18.837: D/TestAdlParser(24118): }
07-09 11:22:18.837: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0004]/items[at0008]
07-09 11:22:18.837: D/DvText(24118): To be converted in JSON:{"value": { "text" : ""}}
07-09 11:22:18.837: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":"DATA_NODE::DV_TEXT","at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":{"value":{"selected":false}},"at0011":{"value":{"text":""}}}},"at0006":{"items":{"at0014":{"value":{"selected":false}},"at0010":{"value":{"text":""}}}},"at0005":{"items":{"at0013":{"value":{"selected":false}},"at0009":{"value":{"text":""}}}}}}]}}}}]}}
07-09 11:22:18.837: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0008": "DATA_NODE::DV_TEXT",
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0012": "DATA_NODE::DV_BOOLEAN"
07-09 11:22:18.837: D/TestAdlParser(24118): }
07-09 11:22:18.837: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0008": {
07-09 11:22:18.837: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.837: D/TestAdlParser(24118):       "text": ""
07-09 11:22:18.837: D/TestAdlParser(24118):     }
07-09 11:22:18.837: D/TestAdlParser(24118):   },
07-09 11:22:18.837: D/TestAdlParser(24118):   "at0012": "DATA_NODE::DV_BOOLEAN"
07-09 11:22:18.837: D/TestAdlParser(24118): }
07-09 11:22:18.837: D/WidgetProvider(24118): PATH TO UPDATE: data[at0001]/events[at0002]/data[at0003]/items[at0004]/items[at0012]
07-09 11:22:18.847: D/DvBoolean(24118): DV_BOOLEAN:it.crs4.most.ehrlib.datatypes.DvBoolean@41f2ee80 Called toJson  for DV_BOOLEAN:false
07-09 11:22:18.847: D/DvBoolean(24118): To be converted in JSON:{"value": { "selected" : false}}
07-09 11:22:18.847: D/TestAdlParser(24118): JSON IN getObjectByPath:{"data":{"at0001":[{"events":{"at0002":{"data":{"at0003":[{"items":{"at0004":{"items":{"at0008":{"value":{"text":""}},"at0012":"DATA_NODE::DV_BOOLEAN"}},"at0007":{"items":{"at0015":{"value":{"selected":false}},"at0011":{"value":{"text":""}}}},"at0006":{"items":{"at0014":{"value":{"selected":false}},"at0010":{"value":{"text":""}}}},"at0005":{"items":{"at0013":{"value":{"selected":false}},"at0009":{"value":{"text":""}}}}}}]}}}}]}}
07-09 11:22:18.847: D/TestAdlParser(24118): STRUCTURE TO UPDATE:{
07-09 11:22:18.847: D/TestAdlParser(24118):   "at0008": {
07-09 11:22:18.847: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.847: D/TestAdlParser(24118):       "text": ""
07-09 11:22:18.847: D/TestAdlParser(24118):     }
07-09 11:22:18.847: D/TestAdlParser(24118):   },
07-09 11:22:18.847: D/TestAdlParser(24118):   "at0012": "DATA_NODE::DV_BOOLEAN"
07-09 11:22:18.847: D/TestAdlParser(24118): }
07-09 11:22:18.847: D/TestAdlParser(24118): UPDATED STRUCTURE:{
07-09 11:22:18.847: D/TestAdlParser(24118):   "at0008": {
07-09 11:22:18.847: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.847: D/TestAdlParser(24118):       "text": ""
07-09 11:22:18.847: D/TestAdlParser(24118):     }
07-09 11:22:18.847: D/TestAdlParser(24118):   },
07-09 11:22:18.847: D/TestAdlParser(24118):   "at0012": {
07-09 11:22:18.847: D/TestAdlParser(24118):     "value": {
07-09 11:22:18.847: D/TestAdlParser(24118):       "selected": false
07-09 11:22:18.847: D/TestAdlParser(24118):     }
07-09 11:22:18.847: D/TestAdlParser(24118):   }
07-09 11:22:18.847: D/TestAdlParser(24118): }
07-09 11:22:19.668: D/ConnectivityService(635): handleInetConditionHoldEnd: net=1, condition=0, published condition=0
